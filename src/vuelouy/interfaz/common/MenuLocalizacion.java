/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vuelouy.interfaz.common;

import vuelouy.dominio.Viaje;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import static java.util.Calendar.getInstance;
import java.util.Observable;
import java.util.Observer;
import javax.swing.Timer;

/**
 *
 * @author Pablo
 */
public class MenuLocalizacion extends javax.swing.JPanel implements Observer, ActionListener {

    private ComunicacionPaneles comunicacion;
    private Timer timer;
    private Viaje viaje;
    private Calendar horaViajeActual;

    /**
     * Creates new form MenuLocalizacion
     */
    public MenuLocalizacion() {
        initComponents();
    }

    public MenuLocalizacion(Viaje v, ComunicacionPaneles com) {
        comunicacion = com;
        viaje = v;
        comunicacion.addObserver(this);
        initComponents();
        comenzarReloj();
        lblOrigen.setText(viaje.getOrigen());
        lblDestino.setText(viaje.getDestino());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblRestante = new javax.swing.JLabel();
        lblTiempoRestante = new javax.swing.JLabel();
        lblHacia = new javax.swing.JLabel();
        lblDesde = new javax.swing.JLabel();
        lblOrigen = new javax.swing.JLabel();
        lblDestino = new javax.swing.JLabel();
        lblLocalizacion = new javax.swing.JLabel();

        lblRestante.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblRestante.setText("Tiempo Restante de Vuelo:");

        lblTiempoRestante.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblTiempoRestante.setText("Hora");

        lblHacia.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblHacia.setText("Hacia:");

        lblDesde.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblDesde.setText("Desde: ");

        lblOrigen.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblOrigen.setText("a");

        lblDestino.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblDestino.setText("a");

        lblLocalizacion.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        lblLocalizacion.setText("Localización");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLocalizacion)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblHacia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDesde, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblOrigen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 249, Short.MAX_VALUE)
                                .addComponent(lblRestante)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblTiempoRestante))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lblDestino)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLocalizacion)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDesde)
                            .addComponent(lblOrigen)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRestante)
                            .addComponent(lblTiempoRestante))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHacia)
                    .addComponent(lblDestino))
                .addContainerGap(417, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblDesde;
    private javax.swing.JLabel lblDestino;
    private javax.swing.JLabel lblHacia;
    private javax.swing.JLabel lblLocalizacion;
    private javax.swing.JLabel lblOrigen;
    private javax.swing.JLabel lblRestante;
    private javax.swing.JLabel lblTiempoRestante;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object o1) {
        if (comunicacion.getBPanel()) {
            this.setVisible(false);
            comunicacion.getVentanaInicioP().mostrarSubMenu(comunicacion.getPanel());
            comunicacion.setBPanel(false);
        }
        if (comunicacion.getIdioma().equals("español")) {
            lblDesde.setText("Desde: ");
            lblHacia.setText("Hacia: ");
            lblRestante.setText("Tiempo Restante de Vuelo: ");
            lblLocalizacion.setText("Localización");
        }
        if (comunicacion.getIdioma().equals("ingles")) {
            lblDesde.setText("From: ");
            lblHacia.setText("To: ");
            lblRestante.setText("Remaining Flying Time: ");
            lblLocalizacion.setText("Location");
        }
        lblOrigen.setText(viaje.getOrigen());
        lblDestino.setText(viaje.getDestino());
    }

    public void comenzarReloj() {
        timer = new Timer(1000, this);
        timer.start();
        
        lblTiempoRestante.setText(viaje.lapsoRestanteViaje());
    }

    @Override
    public void actionPerformed(ActionEvent ae) {
        if (viaje.restarFechas(viaje.getHoraViajeActual(), viaje.getFechaArribo()) <= 0) {
            timer.stop();
        } else {
            viaje.getHoraViajeActual().add(Calendar.SECOND, 1);
        }
        lblTiempoRestante.setText(viaje.lapsoRestanteViaje());
        lblOrigen.setText(viaje.getOrigen());
        lblDestino.setText(viaje.getDestino());
    }
}
